
// Foydalanuvchi roli uchun enum
enum UserRole { user, owner, none }

// Auth holatlari uchun asosiy State class
abstract class AuthState {}

// ðŸ”¹ Dastlabki (boshlangâ€˜ich) holat
class AuthInitial extends AuthState {}

// ðŸ”¹ Foydalanuvchi roli tanlanganda
class AuthRoleSelected extends AuthState {
  final UserRole selectedRole;

   AuthRoleSelected(this.selectedRole);
}

// ðŸ”¹ Yozilgan parollarni toggling qilish uchun
class AuthPasswordToggled extends AuthState {
  final bool isPasswordVisible;
  final bool isConfirmPasswordVisible;
  final bool isLoginPasswordVisible;

   AuthPasswordToggled({
    this.isPasswordVisible = true,
    this.isConfirmPasswordVisible = true,
    this.isLoginPasswordVisible = true,
  });
}

// ðŸ”¹ Roâ€˜yxatdan oâ€˜tish yoki kirish jarayoni davom etyapti
class AuthLoading extends AuthState {}

// ðŸ”¹ Roâ€˜yxatdan oâ€˜tish muvaffaqiyatli boâ€˜ldi
class AuthSignUpSuccess extends AuthState {}

// ðŸ”¹ Kirish muvaffaqiyatli boâ€˜ldi
class AuthLoginSuccess extends AuthState {}

// ðŸ”¹ Xatolik yuz berdi (roâ€˜yxatdan oâ€˜tish/kirish)
class AuthError extends AuthState {
  final String message;

   AuthError(this.message);

  @override
  List<Object?> get props => [message];
}

// ðŸ”¹ SMS kodni kiritish ekrani uchun vaqtni yangilash
class AuthTimerUpdated extends AuthState {
  final int remainingSeconds;
  final bool isResendEnabled;

   AuthTimerUpdated(this.remainingSeconds, this.isResendEnabled);


}

// ðŸ”¹ SMS kod uzunligi tekshirilganda tugmani yoqish
class AuthSmsCodeUpdated extends AuthState {
  final bool isButtonEnabled;

   AuthSmsCodeUpdated(this.isButtonEnabled);

}
